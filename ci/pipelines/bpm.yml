groups:
- name: tests
  jobs:
  - create-final-release
  - test-acceptance-trusty
  - test-acceptance-xenial
  - test-unit
  - test-upgrade
  - tracker
- name: version
  jobs:
  - bump-major
  - bump-minor
  - bump-patch
- name: dependencies
  jobs:
  - bump-golang
  - bump-runc
- name: images
  jobs:
  - build-bpm-ci

resources:
- name: bpm-release
  type: git
  source:
    branch: master
    private_key: ((bpm-github-deploy-key))
    uri: git@github.com:cloudfoundry-incubator/bpm-release.git

- name: version
  type: semver
  source:
    driver: gcs
    bucket: bpm-release-version
    key: current-version
    initial_version: 0.0.0
    json_key: ((bpm-version-gcs-json-key))

- name: boshlite-trusty-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: boshlite-xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-xenial-go_agent

- name: tracker
  type: tracker
  source:
    token: ((tracker-api-token))
    project_id: "2070399"
    tracker_url: "https://www.pivotaltracker.com"

- name: golang-linux
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.\d+(\.\d+)?)\.linux-amd64\.tar.gz'

- name: runc-linux
  type: github-release
  source:
    owner: opencontainers
    repository: runc
    pre_release: true

- name: bpm-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bpm-release
    branch: master
    paths: [ci/Dockerfile]
    private_key: ((bpm-github-deploy-key))

- name: bpm-ci-image
  type: docker-image
  source:
    repository: cfbpm/bpm-ci
    username: ((docker-username))
    email: ((docker-email))
    password: ((docker-password))

- name: golang-image
  type: docker-image
  source:
    repository: golang

- name: daily
  type: time
  source:
    interval: 24h

- name: bpm-bosh-io
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bpm-release

jobs:
- name: test-unit
  public: true
  plan:
  - get: bpm-release
    trigger: true
  - task: test-unit
    file: bpm-release/ci/test-unit.yml
    privileged: true

- name: test-acceptance-trusty
  public: true
  plan:
  - aggregate:
    - get: bpm-release
      trigger: true
    - get: boshlite-trusty-stemcell
      trigger: true
  - task: test-acceptance
    file: bpm-release/ci/test-acceptance.yml
    params:
      STEMCELL_NAME: ubuntu-trusty
    input_mapping:
      bosh-stemcell: boshlite-trusty-stemcell
    privileged: true

- name: test-acceptance-xenial
  public: true
  plan:
  - aggregate:
    - get: bpm-release
      trigger: true
    - get: boshlite-xenial-stemcell
      trigger: true
  - task: test-acceptance
    file: bpm-release/ci/test-acceptance.yml
    params:
      STEMCELL_NAME: ubuntu-xenial
    input_mapping:
      bosh-stemcell: boshlite-xenial-stemcell
    privileged: true

- name: test-upgrade
  public: true
  plan:
  - aggregate:
    - get: bpm-release
      trigger: true
    - get: boshlite-xenial-stemcell
      trigger: true
    - get: bpm-bosh-io
  - task: test-acceptance
    file: bpm-release/ci/test-upgrade.yml
    params:
      STEMCELL_NAME: ubuntu-xenial
    input_mapping:
      bosh-stemcell: boshlite-xenial-stemcell
    privileged: true

- name: tracker
  plan:
  - get: bpm-release
    passed:
    - test-acceptance-trusty
    - test-acceptance-xenial
    - test-unit
    - test-upgrade
    trigger: true
  - put: tracker
    params:
      repos: [bpm-release]

- name: bump-golang
  serial: true
  plan:
  - aggregate:
    - get: golang-linux
      trigger: true
    - get: bpm-release
  - task: bump-blob
    input_mapping:
      bosh-release: bpm-release
      blob-dir: golang-linux
    file: bpm-release/ci/bump-blob.yml
    params:
      BLOB_NAME: golang-linux-amd64.tar.gz
      BLOB_VERSION_FILE: version
      BLOB_DESTINATION: golang
      BOSH_PRIVATE_CONFIG: ((bpm-private-yml))
  - put: bpm-release
    params: {repository: bumped-bosh-release, rebase: true}

- name: bump-runc
  serial: true
  plan:
  - aggregate:
    - get: runc-linux
      trigger: true
    - get: bpm-release
  - task: bump-blob
    input_mapping:
      bosh-release: bpm-release
      blob-dir: runc-linux
    file: bpm-release/ci/bump-blob.yml
    params:
      BLOB_NAME: runc-linux-amd64
      BLOB_VERSION_FILE: version
      BLOB_DESTINATION: runc
      BLOB_DOWNLOAD_FILENAME: runc.amd64
      BOSH_PRIVATE_CONFIG: ((bpm-private-yml))
  - put: bpm-release
    params: {repository: bumped-bosh-release, rebase: true}

- name: bump-patch
  serial_groups:
  - version
  plan:
  - get: version
    passed:
    params:
      bump: patch
  - put: version
    params:
      file: version/version

- name: bump-minor
  serial_groups:
  - version
  plan:
  - get: version
    params:
      bump: minor
  - put: version
    params:
      file: version/version

- name: bump-major
  serial_groups:
  - version
  plan:
  - get: version
    params:
      bump: major
  - put: version
    params:
      file: version/version

- name: create-final-release
  serial_groups: [version]
  plan:
  - aggregate:
    - get: bpm-release
      passed:
      - test-acceptance-trusty
      - test-acceptance-xenial
      - test-unit
      - test-upgrade
    - get: version
      params:
        bump: final
  - task: bump-local-version
    file: bpm-release/ci/bump-local-version.yml
  - task: finalize-release
    file: bpm-release/ci/finalize-release.yml
    input_mapping:
      bpm-release: release-repo
    params:
      RELEASE_NAME: bpm
      BLOBSTORE_PRIVATE_YML: ((bpm-private-yml))
  - put: bpm-release
    get_params:
      submodules: none
    params:
      repository: final-release-repo
      submodules: none
      rebase: true
      tag: version/version
      tag_prefix: v
  - task: bump-local-version
    file: bpm-release/ci/bump-local-version.yml
    input_mapping:
      bpm-release: final-release-repo
    params:
      DEV: true
  - put: bpm-release
    get_params:
      submodules: none
    params:
      repository: release-repo
      submodules: none
      rebase: true

- name: build-bpm-ci
  serial: true
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: bpm-ci
      trigger: true
    - get: golang-image
      trigger: true
      params: {save: true}
    - get: runc-linux
      trigger: true
  - put: bpm-ci-image
    params:
      load_base: golang-image
      build: .
      dockerfile: bpm-ci/ci/Dockerfile
